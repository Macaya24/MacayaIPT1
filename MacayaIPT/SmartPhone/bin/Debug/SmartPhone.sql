/*
Deployment script for SmartPhone

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SmartPhone"
:setvar DefaultFilePrefix "SmartPhone"
:setvar DefaultDataPath "C:\Users\Richard_2\AppData\Local\Microsoft\VisualStudio\SSDT\MacayaIPT"
:setvar DefaultLogPath "C:\Users\Richard_2\AppData\Local\Microsoft\VisualStudio\SSDT\MacayaIPT"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[SmartPhone]...';


GO
CREATE TABLE [dbo].[SmartPhone] (
    [Id]    NVARCHAR (50) NOT NULL,
    [Model] NCHAR (50)    NULL,
    [Color] NCHAR (10)    NULL,
    [ROM]   NCHAR (10)    NULL,
    [RAM]   NCHAR (10)    NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating Procedure [dbo].[CreateSmartPhone]...';


GO
CREATE PROCEDURE [dbo].[CreateSmartPhone]
	@Id NVARCHAR(50) NULL, 
    @Model NCHAR(50) NULL, 
    @Color NCHAR(10) NULL, 
    @ROM NCHAR(10) NULL, 
    @RAM NCHAR(10) NULL
AS
	BEGIN
        INSERT INTO [dbo].[SmartPhone] ([Id], [Model], [Color], [ROM], [RAM])
        VALUES (@Id,@Model,@Color,@ROM,@RAM);
	END
GO
PRINT N'Creating Procedure [dbo].[DeleteSmartPhone]...';


GO
CREATE PROCEDURE [dbo].[DeleteSmartPhone]
	@Id NVARCHAR(50) = NULL
AS
	BEGIN
		DELETE FROM [dbo].[SmartPhone] WHERE Id = @Id;
	END
GO
PRINT N'Creating Procedure [dbo].[SelectAllSmartPhone]...';


GO
CREATE PROCEDURE [dbo].[SelectAllSmartPhone]

AS
	Select * From SmartPhone
GO
PRINT N'Creating Procedure [dbo].[SelectSmartPhone]...';


GO
CREATE PROCEDURE [dbo].[SelectSmartPhone]
	@Id nvarchar (50) = NULL
AS
	BEGIN
		SELECT * FROM [dbo].[SmartPhone] AS a WHERE a.[Id] = @Id;
	END
GO
PRINT N'Creating Procedure [dbo].[UpdateSmartPhone]...';


GO
CREATE PROCEDURE [dbo].[UpdateSmartPhone]
	@Id NVARCHAR(50) NULL, 
    @Model NCHAR(50) NULL, 
    @Color NCHAR(10) NULL, 
    @ROM NCHAR(10) NULL, 
    @RAM NCHAR(10) NULL
AS
	BEGIN
    UPDATE SmartPhone
    SET 
    [Color] = @Color,
    [Model] = @Model,
    [ROM] = @ROM,
    [RAM] = @RAM
    WHERE [Id] = @Id;

    END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
GO

GO
PRINT N'Update complete.';


GO
